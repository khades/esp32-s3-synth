
#include "audio.h"
#include "driver/i2s_common.h"
#include "driver/i2s_std.h"
#include "hal/i2s_types.h"

#define I2S_LRC 11

#define I2S_BCLK 13
#define I2S_DOUT 12
#define I2S_MCLK 10 /* Master clock */

static const i2s_chan_config_t chan_cfg = {
    .id = I2S_NUM_AUTO,
    .role = I2S_ROLE_MASTER,
    .dma_desc_num = BUFFERS,
    .dma_frame_num = FRAME_NUMBERS,
    .auto_clear_after_cb = false,
    .auto_clear_before_cb = false,
    .allow_pd = false,
    .intr_priority = 0,
};

/* Allocate a new TX channel and get the handle of this channel */

/* Setting the configurations, the slot configuration and clock configuration
 * can be generated by the macros These two helper macros are defined in
 * `i2s_std.h` which can only be used in STD mode. They can help to specify the
 * slot and clock configurations for initialization or updating */
static const i2s_std_config_t std_cfg = {
    .clk_cfg = I2S_STD_CLK_DEFAULT_CONFIG(SAMPLE_RATE),
    .slot_cfg =
        I2S_STD_MSB_SLOT_DEFAULT_CONFIG(AUDIO_BITS, I2S_SLOT_MODE_STEREO),
    .gpio_cfg =
        {
            .mclk = I2S_MCLK,
            .bclk = I2S_BCLK,
            .ws = I2S_LRC,
            .dout = I2S_DOUT,
            .din = I2S_GPIO_UNUSED,
            .invert_flags =
                {
                    .mclk_inv = false,
                    .bclk_inv = false,
                    .ws_inv = false,
                },
        },
};

// dma_buffer_size = dma_frame_num * slot_num * slot_bit_width / 8

// TODO: i need overall defines that would calculate dma_buffer_size for given
// sample rate,  tick rate, bit depth etc etc